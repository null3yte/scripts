#!/bin/bash

# Check if the script is run with an argument
if [ $# -eq 0 ]; then
  echo "Usage: $0 path/to/directory"
  exit 1
fi

# Define the input and output files
INPUT_FILE="$1/.scope"
OUTPUT_FILE="$1/.out_of_scope"
DOMAINS_FILE="$1/domains"
DOMAIN_INVENTORY_FILE="$1/.domain_inventory"

# Loop over each line in the scope file
awk '
/^[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+$/ {
    # Output the line to the domains file
    domains[$0]++
}
/^\*\.([a-zA-Z0-9_-]+\.)+[a-zA-Z0-9_-]+$/ {
    # Extract the domain name
    domain = substr($0, 3)

    # Output the domain name to the domains and domain inventory files
    domains[domain]++
    domain_inventory[domain]++
}
END {
    for (domain in domains) {
        print domain >> "'"$DOMAINS_FILE"'" 
    }
    for (domain in domain_inventory) {
        print domain >> "'"$DOMAIN_INVENTORY_FILE"'" 
    }
}
' "$INPUT_FILE"

# Remove duplicates from the domains and domain inventory files
sort -u -o "$DOMAINS_FILE" "$DOMAINS_FILE"
sort -u -o "$DOMAIN_INVENTORY_FILE" "$DOMAIN_INVENTORY_FILE"

# Remove lines from the output file that also exist in the out of scope file
awk 'NR==FNR{a[$0];next} !($0 in a)' "$OUTPUT_FILE" "$DOMAINS_FILE" > "$DOMAINS_FILE.tmp" && mv "$DOMAINS_FILE.tmp" "$DOMAINS_FILE"
awk 'NR==FNR{a[$0];next} !($0 in a)' "$OUTPUT_FILE" "$DOMAIN_INVENTORY_FILE" > "$DOMAIN_INVENTORY_FILE.tmp" && mv "$DOMAIN_INVENTORY_FILE.tmp" "$DOMAIN_INVENTORY_FILE"
